# Generated by Django 4.2.4 on 2024-11-08 06:16

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_name', models.CharField(default='', max_length=255)),
            ],
            options={
                'db_table': 'activity',
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('comment_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'comments',
            },
        ),
        migrations.CreateModel(
            name='company',
            fields=[
                ('company_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('company_name', models.CharField(default='', max_length=255)),
            ],
            options={
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_name', models.CharField(default='', max_length=255)),
            ],
            options={
                'db_table': 'feature',
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('goal_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('session', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, max_length=600, null=True)),
                ('parent_id', models.CharField(blank=True, max_length=40, null=True)),
                ('average_gain', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('epic_key', models.CharField(blank=True, max_length=100, null=True)),
                ('trello_board_id', models.CharField(blank=True, max_length=255, null=True)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.company')),
            ],
            options={
                'db_table': 'goal',
            },
        ),
        migrations.CreateModel(
            name='key_results',
            fields=[
                ('key_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('key_result_type', models.CharField(max_length=255)),
                ('unit', models.CharField(max_length=255)),
                ('target_number', models.FloatField()),
                ('initial_number', models.FloatField()),
                ('current_number', models.FloatField()),
                ('description', models.TextField(blank=True, max_length=600, null=True)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('overall_gain', models.IntegerField(default=0)),
                ('confidence_value', models.IntegerField(default=1)),
                ('subtask_key', models.CharField(blank=True, max_length=100, null=True)),
                ('trello_checklist_item_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'key_result',
            },
        ),
        migrations.CreateModel(
            name='okr',
            fields=[
                ('okr_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('session', models.CharField(max_length=50)),
                ('parent_id', models.CharField(blank=True, max_length=40, null=True)),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('average_gain', models.IntegerField(default=0)),
                ('story_key', models.CharField(blank=True, max_length=100, null=True)),
                ('trello_card_id', models.CharField(blank=True, max_length=255, null=True)),
                ('trello_checklist_id', models.CharField(blank=True, max_length=255, null=True)),
                ('goal_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.goal')),
            ],
            options={
                'db_table': 'okr',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(default='', max_length=255)),
            ],
            options={
                'db_table': 'role',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('recurrence', models.CharField(choices=[('one_time', 'one_time'), ('daily', 'daily'), ('weekly', 'weekly'), ('monthly', 'monthly'), ('yearly', 'yearly'), ('custom', 'custom')], default='one_time', max_length=50)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('participations', models.JSONField(blank=True, null=True)),
                ('repeat_on_days', models.JSONField(blank=True, null=True)),
                ('on_week_of_month', models.CharField(blank=True, max_length=10, null=True)),
                ('weekday_of_month', models.JSONField(blank=True, null=True)),
                ('custom_frequency', models.IntegerField(blank=True, null=True)),
                ('custom_unit', models.CharField(blank=True, choices=[('day', 'Day'), ('week', 'Week'), ('month', 'Month'), ('year', 'Year')], max_length=10, null=True)),
                ('end_condition', models.CharField(choices=[('never', 'Never'), ('on_date', 'On a Specific Date'), ('after_occurrences', 'After X Occurrences')], default='never', max_length=20)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('occurrences', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.company')),
                ('goal_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.goal')),
            ],
            options={
                'db_table': 'schedule',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=500)),
                ('template_title', models.TextField()),
                ('comment_text', models.TextField(blank=True, null=True)),
                ('template_type', models.CharField(choices=[('weekly_template', 'weekly_template'), ('monthly_template', 'monthly_template'), ('quarterly_template', 'quarterly_template')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('default_temp', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'template',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('verify_token', models.CharField(blank=True, max_length=255, null=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('profile_image', models.CharField(blank=True, max_length=255, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project_status', models.CharField(choices=[('on_track', 'on_track'), ('off_track', 'off_track'), ('behind', 'behind'), ('in_progress', 'in_progress')], max_length=50)),
                ('key_result_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.key_results')),
                ('okr_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.okr')),
                ('schedule_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.schedule')),
                ('template', models.ForeignKey(db_column='template_id', on_delete=django.db.models.deletion.CASCADE, related_name='template_answer', to='imongu_backend_app.template')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='user_answers', to='imongu_backend_app.user')),
            ],
            options={
                'db_table': 'user_answer',
            },
        ),
        migrations.CreateModel(
            name='update_key_results',
            fields=[
                ('update_key_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('new_number', models.FloatField()),
                ('changed_at', models.DateTimeField()),
                ('confidence_level', models.CharField(max_length=255)),
                ('note', models.TextField()),
                ('gain', models.IntegerField()),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.company')),
                ('key_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.key_results')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.user')),
            ],
            options={
                'db_table': 'update_key_results',
            },
        ),
        migrations.CreateModel(
            name='templateUserRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.company')),
                ('template', models.ForeignKey(db_column='template_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.template')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.user')),
            ],
            options={
                'db_table': 'template_user_relation',
            },
        ),
        migrations.CreateModel(
            name='TempComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_id', models.CharField(max_length=255)),
                ('receiver_id', models.CharField(max_length=255)),
                ('text', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.schedule')),
            ],
            options={
                'db_table': 'temp_comments',
            },
        ),
        migrations.CreateModel(
            name='team_Table',
            fields=[
                ('team_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('team_name', models.CharField(max_length=255)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.company')),
            ],
            options={
                'db_table': 'team',
            },
        ),
        migrations.CreateModel(
            name='team_employees',
            fields=[
                ('team_employees_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_role', to='imongu_backend_app.role')),
                ('team_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.team_table')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.user')),
            ],
            options={
                'db_table': 'team_employee',
            },
        ),
        migrations.AddField(
            model_name='schedule',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.template'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='user',
            field=models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.user'),
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('room_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.company')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.user')),
            ],
            options={
                'db_table': 'room',
            },
        ),
        migrations.CreateModel(
            name='RoleAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_status', models.BooleanField(default=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='imongu_backend_app.activity')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company', to='imongu_backend_app.company')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='imongu_backend_app.feature')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='imongu_backend_app.role')),
            ],
            options={
                'db_table': 'role_access',
            },
        ),
        migrations.CreateModel(
            name='result_owner',
            fields=[
                ('result_owner_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('key_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result_owner', to='imongu_backend_app.key_results')),
                ('team_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.team_table')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.user')),
            ],
            options={
                'db_table': 'key_result_owner',
            },
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('report_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.company')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.user')),
            ],
            options={
                'db_table': 'reports',
            },
        ),
        migrations.CreateModel(
            name='QuestionTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_title', models.TextField()),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_titles', to='imongu_backend_app.template')),
            ],
            options={
                'db_table': 'question_title',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='imongu_backend_app.questiontitle')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='template_questions', to='imongu_backend_app.template')),
            ],
            options={
                'db_table': 'question',
            },
        ),
        migrations.CreateModel(
            name='Parents',
            fields=[
                ('parent_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('parent_type', models.CharField(max_length=255)),
                ('child_type', models.CharField(max_length=255)),
                ('goal_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.goal')),
                ('key_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.key_results')),
                ('okr_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.okr')),
            ],
            options={
                'db_table': 'parents',
            },
        ),
        migrations.CreateModel(
            name='owners',
            fields=[
                ('owners_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('okr_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owners', to='imongu_backend_app.okr')),
                ('team_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.team_table')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.user')),
            ],
            options={
                'db_table': 'okr_owner',
            },
        ),
        migrations.AddField(
            model_name='key_results',
            name='okr_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='key_results', to='imongu_backend_app.okr'),
        ),
        migrations.CreateModel(
            name='goal_owners',
            fields=[
                ('goal_owner_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('goal_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goal_owners', to='imongu_backend_app.goal')),
                ('team_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.team_table')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.user')),
            ],
            options={
                'db_table': 'goal_owner',
            },
        ),
        migrations.CreateModel(
            name='employee',
            fields=[
                ('employee_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.company')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_role', to='imongu_backend_app.role')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.user')),
            ],
            options={
                'db_table': 'employee',
            },
        ),
        migrations.CreateModel(
            name='Emoji',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('emoji', models.CharField(max_length=255)),
                ('user_ids', models.JSONField(default=dict)),
                ('comment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.comments')),
            ],
            options={
                'db_table': 'emoji',
            },
        ),
        migrations.AddField(
            model_name='company',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.user'),
        ),
        migrations.AddField(
            model_name='comments',
            name='company_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.company'),
        ),
        migrations.AddField(
            model_name='comments',
            name='key_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.key_results'),
        ),
        migrations.AddField(
            model_name='comments',
            name='okr_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.okr'),
        ),
        migrations.AddField(
            model_name='comments',
            name='update_key_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.update_key_results'),
        ),
        migrations.AddField(
            model_name='comments',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.user'),
        ),
        migrations.AddField(
            model_name='activity',
            name='feature',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_features', to='imongu_backend_app.feature'),
        ),
        migrations.CreateModel(
            name='JiraConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connection_name', models.CharField(max_length=100)),
                ('sub_domain_url', models.URLField()),
                ('username', models.CharField(max_length=100)),
                ('api_token', models.CharField(max_length=300)),
                ('project_key', models.CharField(max_length=100)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imongu_backend_app.user')),
            ],
            options={
                'db_table': 'jira_credentials',
                'unique_together': {('user', 'company_id')},
            },
        ),
    ]
