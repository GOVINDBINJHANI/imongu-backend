"""
Django settings for imongu_backend project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from decouple import config
from dotenv import load_dotenv
import os 

load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

os.environ["OAUTHLIB_INSECURE_TRANSPORT"] = "1"
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


EMAIL_BACKEND = config(
    "EMAIL_BACKEND", default="django.core.mail.backends.smtp.EmailBackend"
)
EMAIL_PORT = config("EMAIL_PORT", default=587, cast=int)
EMAIL_USE_TLS = config("EMAIL_USE_TLS", default=True, cast=bool)

LOGIN_BASE_URL = config("LOGIN_BASE_URL")
RESET_URL_BASE = config("RESET_URL_BASE")

STRIPE_API_KEY = config("STRIPE_KEY")
SIGNING_SECRET_KEY = config("SIGNING_SECRET_KEY")
FREE_PLAN_PRICE_ID = config("FREE_PLAN_PRICE_ID")
CLIENT_ID = config("CLIENT_ID")
VERIFY_EMAIL_URL_BASE = config("VERIFY_EMAIL_URL_BASE")

AWS_STORAGE_BUCKET_NAME = config("AWS_STORAGE_BUCKET_NAME")
AWS_ACCESS_KEY = config("AWS_ACCESS_KEY")
AWS_SECRET_ACCESS_KEY = config("AWS_SECRET_ACCESS_KEY")
OPENAI_API_KEY = config("OPENAI_API_KEY")
AGNESS_EMAIL = config("AGNESS_EMAIL")
TRIAL_PRICE_ID = config("TRIAL_PRICE_ID")
STRIPE_PRODUCT_ID = config("STRIPE_PRODUCT_ID")

MICROSOFT_SCOPES = ["Calendars.ReadWrite", "OnlineMeetings.ReadWrite"]
MICROSOFT_AUTHORITY = f"https://login.microsoftonline.com/{config('MICROSOFT_TENANT_ID')}"
MICROSOFT_CLIENT_ID = config("MICROSOFT_CLIENT_ID")
MICROSOFT_CLIENT_SECRET = config("MICROSOFT_CLIENT_SECRET")
# MICROSOFT_REDIRECT_URI = "http://localhost:53075/auth/microsoft/callback/"
MICROSOFT_REDIRECT_URI = "https://dev.imongu.com/auth/microsoft/callback/"
MICROSOFT_TENANT_ID = config("MICROSOFT_TENANT_ID")

REACTIVATION_URL_BASE = config("REACTIVATION_URL_BASE")
ASANA_CALLBACK_URL = config("ASANA_CALLBACK_URL")
TRELLO_CALLBACK_URL = config("TRELLO_CALLBACK_URL")

SUCCESS_URL = config("SUCCESS_URL")
CANCEL_URL = config("CANCEL_URL")
RETURN_URL = config("RETURN_URL")
import logging

logging.basicConfig(level="DEBUG")
logging.info("hello world")

# Application definition

INSTALLED_APPS = [
    "daphne",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "imongu_backend_app",
    "corsheaders",
    "rest_framework",
    "allauth",
    "social_django",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    "notification",
    "chatbot",
    "payment",
    "integrations",
    "django_apscheduler",
    "django_elasticsearch_dsl",
    "django_elasticsearch_dsl_drf",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "allauth.account.middleware.AccountMiddleware",
]

ROOT_URLCONF = "imongu_backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# WSGI_APPLICATION = 'imongu_backend.wsgi.application'

ASGI_APPLICATION = "imongu_backend.asgi.application"

# CHANNEL_LAYERS = {
#     'default': {
#         'BACKEND': "channels.layers.InMemoryChannelLayer"
#     }
# }

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
import os

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static/")

# Default primary key field type
CORS_ALLOW_CREDENTIALS = True
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field
CORS_ALLOWED_ORIGINS = [
    "https://imongu.com",
    "http://localhost:3000",
]

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
SITE_ID = 1
AUTHENTICATION_BACKENDS = (
    "social_core.backends.google.GoogleOAuth2",
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
)
# Google OAuth Configuration
SOCIALACCOUNT_PROVIDERS = {
}
LOGIN_URL = "login"
LOGOUT_URL = "logout"
LOGIN_REDIRECT_URL = "/"
# Security settings


# for handling large profile images
DATA_UPLOAD_MAX_MEMORY_SIZE = 1024 * 1024 * 10  # Example: 10 MB
FILE_UPLOAD_MAX_MEMORY_SIZE = 1024 * 1024 * 10

REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    "PAGE_SIZE": 100,
}
